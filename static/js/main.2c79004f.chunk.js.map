{"version":3,"sources":["components/MemoryViewer.tsx","layouts/SideMenu.tsx","pages/MemoryEdit.tsx","components/ServerSettings.tsx","pages/ServerSettings.tsx","theme/MaterialUI.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MemoryViewerTBL","props","bytesPerRow","undefined","baseAddr","startAddr","i","rows","Math","ceil","memoryContents","length","row","toString","ci","push","slice","Fragment","Table","size","TableHead","TableRow","TableCell","Array","map","_","TableBody","byteValues","byteVal","align","description","drawerWidth","useStyles","makeStyles","theme","createStyles","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","PersistentDrawerLeft","classes","useTheme","React","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","onClick","edge","Typography","variant","noWrap","Drawer","anchor","paper","direction","Divider","List","to","style","ListItem","button","ListItemIcon","ListItemText","primary","MemoryEdit","Container","maxWidth","Paper","marginTop","MemoryViewer","ServerSettings","setServerPort","setServerHost","Grid","container","item","xs","TextField","id","label","margin","placeholder","fullWidth","InputLabelProps","shrink","onChange","event","target","value","darkTheme","createMuiTheme","palette","light","main","dark","contrastText","secondary","type","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c79004f.chunk.js","sourcesContent":["import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\ntype Props = {\n  memoryContents: string,\n  startAddr: number,\n  bytesPerRow?: number\n}\n\ntype RowContents = {\n  baseAddr: string,\n  byteValues: string[],\n  description: string,\n}\n\nconst MemoryViewerTBL: React.FC<Props> = (props: Props) => {\n  const bytesPerRow = props.bytesPerRow === undefined ? 16 : props.bytesPerRow;\n  let baseAddr: number = props.startAddr;\n  let i: number = 0;\n  let rows: RowContents[] = [];\n  while (i < Math.ceil(props.memoryContents.length)) {\n    let row: RowContents = {\n      'baseAddr': baseAddr.toString(16),\n      'byteValues': [],\n      'description': 'temp string',\n    };\n    for (let ci = 0; ci < bytesPerRow; ci++) {\n      row['byteValues'].push(props.memoryContents.slice(i, i+2));\n      i += 2;\n    }\n    rows.push(row);\n    baseAddr += bytesPerRow;\n  }\n  return (\n    <React.Fragment>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ADDRESS</TableCell>\n            {\n              [...Array(bytesPerRow)].map((_, i) => {\n                return (\n                  <TableCell>{`${i+1}`}</TableCell>\n                )\n              })\n            }\n            <TableCell>DESCRIPTION</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.baseAddr}>\n              <TableCell>{row.baseAddr}</TableCell>\n              {row.byteValues.map((byteVal: string) => (\n                <TableCell>{byteVal}</TableCell>\n              ))}\n              <TableCell align=\"center\">{row.description}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  );\n}\n\nexport default MemoryViewerTBL;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { Link } from \"react-router-dom\";\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n  }),\n);\n\nexport default function PersistentDrawerLeft() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Menu\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <Link to=\"/memory_edit\" style={{ color: '#FFF' }}>\n            <ListItem button key=\"momery_viewer\">\n              <ListItemIcon><ListAltIcon/></ListItemIcon>\n              <ListItemText primary=\"Memory Viewer\" />\n            </ListItem>\n          </Link>\n          <Link to=\"/server_setting\" style={{ color: '#FFF' }}>\n            <ListItem button key=\"server_setting\">\n              <ListItemIcon><SettingsIcon/></ListItemIcon>\n              <ListItemText primary=\"Server Setting\" />\n            </ListItem>\n          </Link>\n        </List>\n        <Divider />\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n      </main>\n    </div>\n  );\n}\n","import { Container } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport MemoryViewer from '../components/MemoryViewer';\nimport SideMenu from '../layouts/SideMenu';\n\n\ntype Props = {\n}\n\nconst MemoryEdit: React.FC<Props> = (props: Props) => {\n  return (\n    <div>\n      <SideMenu />\n      <Container maxWidth='lg'>\n        <Paper style={{padding: \"10px 50px 30px\", marginTop: 20}}>\n          <MemoryViewer\n            memoryContents=\"AAAAFAFFSAGHSUJADYDGAUDAAAAFAFFSAGHSUJADYDGAUDAAAAFAFFSAGHSUJADYDGAUDAAAAFAFFSAGHSUJADYDGAUDAAAAFAFFSAGHSUJADYDGAUDAAAAFAFFSAGHSUJADYDGAUD\"\n            startAddr={123435354}\n          />\n        </Paper>\n      </Container>\n    </div>\n  )\n}\n\nexport default MemoryEdit;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\n\ntype Props = {}\n\n\nconst ServerSettings: React.FC<Props> = (props: Props) => {\n  const [serverPort, setServerPort] = React.useState<string>('');\n  const [serverHost, setServerHost] = React.useState<string>('');\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <TextField\n            id=\"host\"\n            label=\"Server Host\"\n            style={{ margin: 8 }}\n            placeholder=\"Server Host\"\n            fullWidth\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n            onChange={(event: any) => { setServerHost(event.target.value); }}\n          />\n        </Grid>\n        <Grid item xs={3}>\n        <TextField\n            id=\"port\"\n            label=\"Port\"\n            style={{ margin: 8 }}\n            placeholder=\"Port\"\n            fullWidth\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n            onChange={(event: any) => { setServerPort(event.target.value); }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\n\nexport default ServerSettings;\n","import { Container } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport ServerSettingsComponent from '../components/ServerSettings';\nimport SideMenu from '../layouts/SideMenu';\n\n\ntype Props = {\n}\n\nconst ServerSettings: React.FC<Props> = (props: Props) => {\n  return (\n    <div>\n      <SideMenu />\n      <Container maxWidth='md'>\n        <Paper style={{padding: \"10px 50px 30px\", marginTop: 20}}>\n          <ServerSettingsComponent />\n        </Paper>\n      </Container>\n    </div>\n  )\n}\n\nexport default ServerSettings;\n","import {createMuiTheme} from '@material-ui/core/styles'\n\n\nexport const darkTheme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#757ce8',\n      main: '#d32f2f',\n      dark: '#002884',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#651fff',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n    type: \"dark\",\n  },\n});\n","import { MuiThemeProvider } from '@material-ui/core/styles';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport MemoryEdit from './pages/MemoryEdit';\nimport ServerSettings  from './pages/ServerSettings';\nimport { darkTheme } from './theme/MaterialUI';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MuiThemeProvider theme={darkTheme}>\n        <Router>\n          <Switch>\n            <Route path=\"/\" component={MemoryEdit} exact />\n            <Route path=\"/memory_edit\" component={MemoryEdit} exact />\n            <Route path=\"/server_setting\" component={ServerSettings} exact />\n          </Switch>\n        </Router>\n      </MuiThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}